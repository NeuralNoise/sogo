Index: sogo/OpenChange/SOGoMAPIDBObject.m
===================================================================
--- sogo.orig/OpenChange/SOGoMAPIDBObject.m	2014-02-26 05:36:13.932048961 +0100
+++ sogo/OpenChange/SOGoMAPIDBObject.m	2014-02-26 05:36:13.912048961 +0100
@@ -240,6 +240,7 @@
 {
   NSString *className, *mapiMsgClass;
 
+  className = NULL;
   switch (objectType)
     {
     case MAPIDBObjectTypeMessage:
@@ -269,6 +270,11 @@
                   format: @"message class should not be queried for objects"
                    @" of type '%d'", objectType];
     }
+    if (className == NULL) {
+        [NSException raise: @"MAPIStoreIOException"
+                  format: @"message class should not be queried for objects"
+                   @" of type '%d'", objectType];
+    }
 
   return NSClassFromString (className);
 }
@@ -281,6 +287,8 @@
 
   if (nameInContainer)
     oldPath = [self path];
+  else
+    oldPath = NULL;
 
   [super setNameInContainer: newNameInContainer];
 
Index: sogo/OpenChange/SOGoMAPIDBFolder.m
===================================================================
--- sogo.orig/OpenChange/SOGoMAPIDBFolder.m	2014-02-26 05:36:13.932048961 +0100
+++ sogo/OpenChange/SOGoMAPIDBFolder.m	2014-02-26 05:36:13.912048961 +0100
@@ -227,6 +227,8 @@
   /* change the paths in children records */
   if (nameInContainer)
     oldPath = [self path];
+  else
+    oldPath = nil;
 
   [super setNameInContainer: newName];
 
Index: sogo/OpenChange/MAPIStoreFolder.m
===================================================================
--- sogo.orig/OpenChange/MAPIStoreFolder.m	2014-02-26 05:36:13.932048961 +0100
+++ sogo/OpenChange/MAPIStoreFolder.m	2014-02-26 05:36:13.916048961 +0100
@@ -101,6 +101,8 @@
   NSUInteger lastPartIdx;
   MAPIStoreUserContext *userContext;
 
+  parts = 0;
+  lastPartIdx = 0;
   folderURL = [NSURL URLWithString: [self url]];
   /* note: -[NSURL path] returns an unescaped representation */
   path = [folderURL path];
@@ -232,6 +234,7 @@
   SOGoFolder *sogoFolder;
   WOContext *woContext;
 
+  childFolder = nil;
   if ([[self folderKeys] containsObject: folderKey])
     {
       woContext = [[self userContext] woContext];
Index: sogo/OpenChange/MAPIStoreMessage.m
===================================================================
--- sogo.orig/OpenChange/MAPIStoreMessage.m	2014-02-26 05:36:13.932048961 +0100
+++ sogo/OpenChange/MAPIStoreMessage.m	2014-02-26 05:36:13.916048961 +0100
@@ -474,7 +474,8 @@
   MAPIStoreMessage *mainMessage;
 
   //[self logWithFormat: @"METHOD '%s' (%d)", __FUNCTION__, __LINE__];
-  
+  containerTables = nil;
+  max = 0;
   context = [self context];
   ownerUser = [[self userContext] sogoUser];
   userIsOwner = [[context activeUser] isEqual: ownerUser];
Index: sogo/OpenChange/MAPIStoreObject.m
===================================================================
--- sogo.orig/OpenChange/MAPIStoreObject.m	2014-02-26 05:36:13.932048961 +0100
+++ sogo/OpenChange/MAPIStoreObject.m	2014-02-26 05:36:13.916048961 +0100
@@ -250,6 +250,7 @@
   id value;
 
   tz = nil;
+  tzOffset = 0;
 
   newProperties = [NSMutableDictionary dictionaryWithCapacity: aRow->cValues];
   for (counter = 0; counter < aRow->cValues; counter++)
Index: sogo/OpenChange/MAPIStoreDBFolder.m
===================================================================
--- sogo.orig/OpenChange/MAPIStoreDBFolder.m	2014-02-26 05:36:13.932048961 +0100
+++ sogo/OpenChange/MAPIStoreDBFolder.m	2014-02-26 05:36:13.920048961 +0100
@@ -138,6 +138,8 @@
   MAPIStoreMapping *mapping;
   NSRange slashRange;
 
+  pathComponent = nil;
+
   if (isMove && [targetFolder isKindOfClass: MAPIStoreDBFolderK])
     {
       path = [sogoObject path];
Index: sogo/OpenChange/MAPIStoreMailFolder.m
===================================================================
--- sogo.orig/OpenChange/MAPIStoreMailFolder.m	2014-02-26 05:36:13.932048961 +0100
+++ sogo/OpenChange/MAPIStoreMailFolder.m	2014-02-26 05:36:13.920048961 +0100
@@ -163,6 +163,7 @@
   int i;
 
   nameInContainer = nil;
+  rc = MAPISTORE_ERROR;
 
   folderName = nil;
   for (i = 0; !folderName && i < aRow->cValues; i++)
@@ -857,6 +858,8 @@
   uint32_t currentUid, rangeMin;
   BOOL done = NO, inRange = NO;
 
+  rangeMin = 0;
+  currentUid = 0;
   UIDs = [NSMutableArray array];
   while (!done)
     {
Index: sogo/OpenChange/RTFHandler.m
===================================================================
--- sogo.orig/OpenChange/RTFHandler.m	2014-02-26 05:36:13.932048961 +0100
+++ sogo/OpenChange/RTFHandler.m	2014-02-26 05:36:13.924048961 +0100
@@ -508,6 +508,7 @@
 
   fontTable = [[[RTFFontTable alloc] init] autorelease];
   fontName = nil;
+  fontInfo = nil;
   count = 0;
  
   do
@@ -648,6 +649,7 @@
   fontTable = nil;
   colorTable = nil;
   charset = NULL;
+  formattingOptions = nil;
 
   _html = [[NSMutableData alloc] init];
   [_html appendBytes: "<html><meta charset='utf-8'><body>"  length: 34];
Index: sogo/GNUmakefile
===================================================================
--- sogo.orig/GNUmakefile	2014-02-26 05:36:13.932048961 +0100
+++ sogo/GNUmakefile	2014-02-26 05:36:13.924048961 +0100
@@ -9,7 +9,8 @@
 	OGoContentStore	\
 	SoObjects	\
 	Tools		\
-	Tests/Unit
+	Tests/Unit	\
+	OpenChange
 
 ifeq ($(daemon),yes)
 SUBPROJECTS += Main
Index: sogo/OpenChange/MAPIStoreSOGo.m
===================================================================
--- sogo.orig/OpenChange/MAPIStoreSOGo.m	2014-02-17 19:10:41.655914570 +0100
+++ sogo/OpenChange/MAPIStoreSOGo.m	2014-02-26 05:37:57.032050508 +0100
@@ -115,7 +115,7 @@
     }
 
   registry = [SoProductRegistry sharedProductRegistry];
-  [registry scanForProductsInDirectory: SOGO_BUNDLES_DIR];
+  [registry scanForProductsInDirectory: @"/usr/lib/GNUstep/SOGo"];
 
   loader = [SOGoProductLoader productLoader];
   [loader loadProducts: [NSArray arrayWithObject: BACKEND_BUNDLE_NAME]];
